{"version":3,"sources":["webpack:///./src/components/DownloadButton.tsx","webpack:///./src/pages/download.tsx"],"names":["DownloadButton_DownloadButton","DownloadButton","props","_this","_React$PureComponent","call","this","state","to","componentDidMount","getGithubReleases","releases","release","isReleaseValid","console","log","assets","asset","name","includes","downloadUrl","browser_download_url","setState","render","Object","core_browser_esm","Button","img","draft","prerelease","length","tag_name","axios_default","a","request","method","url","timeout","data","react","__webpack_exports__","layouts","Page","Container","href"],"mappings":"oQAsBqBA,cACnB,SAAAC,EAAYC,GAAW,IAAAC,EAAA,OACrBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,CACXC,GAAI,kDAHeL,sCAOVM,yKACYH,KAAKI,2BAAtBC,WACgBA,wRAAXC,IACJN,KAAKO,eAAeD,2DACzBE,QAAQC,IAAI,QAASH,KACDA,EAAQI,gSACR,OADTC,KACCC,MAAiBD,EAAMC,KAAKC,SAAS,qEACzCC,EAAcH,EAAMI,6EAE1Bf,KAAKgB,SAAS,CACZd,GAAIY,yJAMLG,kBAAS,IACNf,EAAOF,KAAKC,MAAZC,GACR,OACEgB,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAQlB,GAAIA,EAAImB,IAAI,aAApB,yBAMId,wBAAeD,GACrB,OAAqB,MAAjBA,EAAQgB,QAAiBhB,EAAQgB,QACX,MAAtBhB,EAAQiB,aAAsBjB,EAAQiB,aACpB,MAAlBjB,EAAQI,QAA4C,IAA1BJ,EAAQI,OAAOc,UACxClB,EAAQmB,cAIDrB,6IACEsB,EAAAC,EAAMC,QAAmB,CACrCC,OAAQ,MACRC,IAAK,2DACLC,QAAS,6CACPC,4GA9CoCC,EAAA,wBCU5CC,EAAA,QAzBqB,kBACnBhB,OAAAC,EAAA,EAAAD,CAACiB,EAAA,EAAD,KACEjB,OAAAC,EAAA,EAAAD,CAACkB,EAAA,EAAD,KACElB,OAAAC,EAAA,EAAAD,CAACmB,EAAA,EAAD,KACEnB,OAAAC,EAAA,EAAAD,CAAA,4BACAA,OAAAC,EAAA,EAAAD,CAAA,0BACAA,OAAAC,EAAA,EAAAD,CAAA,iMAIAA,OAAAC,EAAA,EAAAD,CAACxB,EAAD,MACAwB,OAAAC,EAAA,EAAAD,CAAA,SACEA,OAAAC,EAAA,EAAAD,CAAA,WADF,kCAEiCA,OAAAC,EAAA,EAAAD,CAAA,KAAGoB,KAAK,kDAAR,WAEjCpB,OAAAC,EAAA,EAAAD,CAAA,8BACAA,OAAAC,EAAA,EAAAD,CAAA,oIAC2H,IACzHA,OAAAC,EAAA,EAAAD,CAAA,KAAGoB,KAAK,gDAAR,QAFF","file":"component---src-pages-download-tsx-c18c4f55ebd68fc87e66.js","sourcesContent":["import * as React from 'react'\nimport axios from 'axios'\n\nimport Button from './Button'\n\ninterface Asset {\n  browser_download_url: string\n  name: string\n}\n\ninterface Release {\n  draft: boolean\n  prerelease: boolean\n  assets: Asset[]\n  tag_name: string\n  body: string\n}\n\ninterface DownloadButtonState {\n  to: string\n}\n\nexport default class DownloadButton extends React.PureComponent<{}, DownloadButtonState> {\n  constructor(props: {}) {\n    super(props)\n    this.state = {\n      to: 'https://github.com/tarnadas/net64plus/releases'\n    }\n  }\n\n  public async componentDidMount() {\n    const releases = await this.getGithubReleases()\n    for (const release of releases) {\n      if (!this.isReleaseValid(release)) continue\n      console.log('VALID', release)\n      for (const asset of release.assets) {\n        if (asset.name == null || !asset.name.includes('64plus')) continue\n        const downloadUrl = asset.browser_download_url\n        if (!downloadUrl) continue\n        this.setState({\n          to: downloadUrl\n        })\n      }\n    }\n  }\n\n  public render() {\n    const { to } = this.state\n    return (\n      <Button to={to} img=\"net64.svg\">\n        Download Net64Plus\n      </Button>\n    )\n  }\n\n  private isReleaseValid(release: Release): boolean {\n    if (release.draft == null || release.draft) return false\n    if (release.prerelease == null || release.prerelease) return false\n    if (release.assets == null || release.assets.length === 0) return false\n    if (!release.tag_name) return false\n    return true\n  }\n\n  private async getGithubReleases() {\n    return (await axios.request<Release[]>({\n      method: 'get',\n      url: 'https://api.github.com/repos/tarnadas/net64plus/releases',\n      timeout: 10000\n    })).data\n  }\n}\n","import * as React from 'react'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport DownloadButton from '../components/DownloadButton'\nimport IndexLayout from '../layouts'\n\nconst DownloadPage = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>Download Net64</h1>\n        <h3>Net64 Client</h3>\n        <p>\n          The Net64 client is everything you need to play your Super Mario 64 copy with friends. It comes with a bundled emulator and lets\n          you join other server as well as creating your own.\n        </p>\n        <DownloadButton />\n        <p>\n          <br />\n          You can find older releases on <a href=\"https://github.com/Tarnadas/net64plus/releases\">GitHub</a>\n        </p>\n        <h3>Dedicated Server</h3>\n        <p>\n          If you'd like to host a server without running an instance of Super Mario 64 you can download the server executable from{' '}\n          <a href=\"https://github.com/Tarnadas/net64plus-server\">here</a>.\n        </p>\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default DownloadPage\n"],"sourceRoot":""}