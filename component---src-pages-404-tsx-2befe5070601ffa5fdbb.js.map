{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/styles/variables.ts","webpack:///./src/styles/mixins.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Container.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Page.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/styles/normalize.ts","webpack:///./src/components/NavigationLink.tsx","webpack:///./src/components/Navigation.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx"],"names":["__webpack_exports__","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_5__","_components_Page__WEBPACK_IMPORTED_MODULE_3__","_components_Container__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","__webpack_require__","d","zIndices","colors","brand","lilac","accent","success","warning","ui","bright","light","whisper","code","gray","dark","copy","calm","white","black","fonts","sansSerif","serif","monospace","breakpoints","xs","sm","md","lg","xl","widths","dimensions","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","heights","navigation","header","getEmSize","size","_variables__WEBPACK_IMPORTED_MODULE_0__","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_1___default","a","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_2___default","object","string","isRequired","func","StyledContainer","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","_styles_mixins__WEBPACK_IMPORTED_MODULE_4__","_styles_variables__WEBPACK_IMPORTED_MODULE_3__","_ref","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","m","module","exports","default","StyledPage","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","createElement","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","assign","json","shape","normalize","variables","mixins","StyledNavigationLink","styled_base_browser_esm","components_NavigationLink","link","core_browser_esm","gatsby_browser_entry","url","label","StyledNavigation","components_Navigation","links","map","pageLink","StyledHeader","polished_es","HeaderInner","Container","name","styles","HomepageLink","components_Header","title","StyledLayoutRoot","components_LayoutRoot","react","StyledLayoutMain","components_LayoutMain","Helmet_default","site","siteMetadata","meta","content","description","_991718019"],"mappings":"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","file":"component---src-pages-404-tsx-2befe5070601ffa5fdbb.js","sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\nconst NotFoundPage = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>404: Page not found.</h1>\n        <p>\n          You've hit the void. <Link to=\"/\">Go back.</Link>\n        </p>\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default NotFoundPage\n","/* tslint:disable:max-line-length */\n\nexport const colors = {\n  brand: '#663399',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc'\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)'\n  },\n  white: '#fff',\n  black: '#000'\n}\n\nexport const fonts = {\n  sansSerif:\n    'Open Sans, -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace'\n}\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n}\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140\n}\n\nexport const dimensions = {\n  fontSize: {\n    regular: 18,\n    large: 22\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2\n  },\n  containerPadding: 1.5\n}\n\nexport const heights = {\n  navigation: 28,\n  header: 60\n}\n\nexport const zIndices = {\n  navigation: 100\n}\n","import { dimensions } from './variables'\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { widths } from '../styles/variables'\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.SFC<ContainerProps> = ({ children, className }) => (\n  <StyledContainer className={className}>{children}</StyledContainer>\n)\n\nexport default Container\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { dimensions } from '../styles/variables'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.SFC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { dimensions, fonts, colors, breakpoints } from './variables'\nimport { getEmSize } from './mixins'\n\nexport default `\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    background-color: ${colors.white};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    margin-bottom: 1rem;\n    border: 1px solid ${colors.ui.light};\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n\n  td,\n  th {\n    padding: .25rem .5rem;\n    border: 1px solid ${colors.ui.light};\n  }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-of-type(odd) {\n        td {\n          background-color: ${colors.ui.whisper};\n        }\n        tr {\n          background-color: ${colors.ui.whisper};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${colors.ui.light};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${colors.ui.light};\n    color: ${colors.gray.calm};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\nimport { getEmSize } from '../styles/mixins'\n\nexport interface PageLink {\n  label: string\n  url: string\n}\n\nconst StyledNavigationLink = styled.div`\n  margin: 0 ${getEmSize(12)}rem;\n  a {\n    color: white;\n  }\n`\n\ninterface NavigationLinkProps {\n  link: PageLink\n}\n\nconst NavigationLink: React.SFC<NavigationLinkProps> = ({ link }) => (\n  <StyledNavigationLink>\n    <Link to={link.url}>{link.label}</Link>\n  </StyledNavigationLink>\n)\n\nexport default NavigationLink\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport NavigationLink, { PageLink } from './NavigationLink'\nimport { heights, zIndices, colors } from '../styles/variables'\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledNavigation = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  height: ${getEmSize(heights.navigation)}rem;\n  line-height: ${getEmSize(heights.navigation)}rem;\n  display: flex;\n  z-index: ${zIndices.navigation};\n  background-color: ${colors.brand};\n  display: flex;\n  align-items: center;\n`\n\ninterface NavigationProps {\n  links: PageLink[]\n}\n\nconst Navigation: React.SFC<NavigationProps> = ({ links }) => (\n  <StyledNavigation>\n    {links.map(pageLink => (\n      <NavigationLink link={pageLink} />\n    ))}\n  </StyledNavigation>\n)\n\nexport default Navigation\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { transparentize } from 'polished'\nimport { Link } from 'gatsby'\n\nimport { heights, dimensions, colors } from '../styles/variables'\nimport Container from './Container'\nimport Navigation from './Navigation'\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledHeader = styled.header`\n  height: ${getEmSize(heights.header)}rem;\n  margin-top: ${getEmSize(heights.navigation)}rem;\n  padding: 0 ${dimensions.containerPadding}rem;\n  background-color: ${colors.brand};\n  color: ${transparentize(0.5, colors.white)};\n`\n\nconst HeaderInner = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n`\n\nconst HomepageLink = styled(Link)`\n  color: ${colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Header: React.SFC<HeaderProps> = ({ title }) => (\n  <StyledHeader>\n    <Navigation\n      links={[\n        {\n          label: 'Home',\n          url: '/'\n        },\n        {\n          label: 'Download',\n          url: '/net64plus'\n        },\n        {\n          label: 'FAQ',\n          url: '/faq'\n        },\n        {\n          label: 'Hosting',\n          url: '/hosting'\n        }\n      ]}\n    />\n    <HeaderInner>\n      <HomepageLink to=\"/\">{title}</HomepageLink>\n    </HeaderInner>\n  </StyledHeader>\n)\n\nexport default Header\n","import * as React from 'react'\nimport { Global, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport normalize from '../styles/normalize'\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.SFC<LayoutRootProps> = ({ children, className }) => (\n  <>\n    <Global styles={() => css(normalize)} />\n    <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\ninterface LayoutMainProps {\n  className?: string\n}\n\nconst LayoutMain: React.SFC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n)\n\nexport default LayoutMain\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\nimport '../styles/normalize'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport LayoutMain from '../components/LayoutMain'\n\ntype StaticQueryProps = {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n    }\n  }\n}\n\nconst IndexLayout: React.SFC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: 'net64, super, mario, 64, online' }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <LayoutMain>{children}</LayoutMain>\n      </LayoutRoot>\n    )}\n  />\n)\n\nexport default IndexLayout\n"],"sourceRoot":""}