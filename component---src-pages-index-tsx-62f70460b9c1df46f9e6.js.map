{"version":3,"sources":["webpack:///./src/components/NewsEntry.tsx","webpack:///./src/components/News.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/utils/rehype.ts"],"names":["StyledNewsEntry","Object","styled_base_browser_esm","target","mixins","variables","gray","copy","white","StyledHeader","brand","StyledSubHeader","dark","components_NewsEntry","_ref","author","title","birthTime","children","timestamp","Date","toLocaleDateString","core_browser_esm","StyledNews","name","styles","components_News","gatsby_browser_entry","query","render","data","allFile","edges","map","edge","node","childMarkdownRemark","frontmatter","modifiedTime","key","rehype","htmlAst","_2651076963","__webpack_exports__","layouts","Page","Container","Button","to","img","renderAst","rehype_react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_0__","components","button","_components_Button__WEBPACK_IMPORTED_MODULE_2__","Compiler"],"mappings":"qMAMMA,EAAeC,OAAAC,EAAA,EAAAD,CAAA,OAAAE,OAAA,YAAAF,CAAA,WACRA,OAAAG,EAAA,EAAAH,CAAU,IADF,aAETA,OAAAG,EAAA,EAAAH,CAAU,IAFD,sBAGHI,EAAA,EAAOC,KAAKC,KAHT,kBAIFN,OAAAG,EAAA,EAAAH,CAAU,IAJR,uBAKCI,EAAA,EAAOG,MALR,8BAMUH,EAAA,EAAOC,KAAKC,KANtB,+CAcfE,EAAYR,OAAAC,EAAA,EAAAD,CAAA,OAAAE,OAAA,YAAAF,CAAA,yCAGPI,EAAA,EAAOK,MAHA,KAMZC,EAAeV,OAAAC,EAAA,EAAAD,CAAA,OAAAE,OAAA,YAAAF,CAAA,0BAEVI,EAAA,EAAOC,KAAKM,KAFF,wBA0BrBC,EAb6C,SAAAC,GAA4C,IAAzCC,EAAyCD,EAAzCC,OAAQC,EAAiCF,EAAjCE,MAAOC,EAA0BH,EAA1BG,UAAWC,EAAeJ,EAAfI,SAClEC,EAAY,IAAIC,KAAKH,GAAWI,qBACtC,OACEpB,OAAAqB,EAAA,EAAArB,CAACD,EAAD,KACEC,OAAAqB,EAAA,EAAArB,CAACQ,EAAD,KAAeO,GACff,OAAAqB,EAAA,EAAArB,CAACU,EAAD,KACGQ,EADH,SACoBJ,GAEnBG,ICxCDK,EAAUtB,OAAAC,EAAA,EAAAD,CAAA,OAAAE,OAAA,YAAAF,CAAA,CAAAuB,KAAA,UAAAC,OAAA,4EAgEhBC,EAvC4B,kBAC1BzB,OAAAqB,EAAA,EAAArB,CAAC0B,EAAA,YAAD,CACEC,MAAK,aAmBLC,OAAQ,SAACC,GAAD,OACN7B,OAAAqB,EAAA,EAAArB,CAACsB,EAAD,KACGO,EAAKC,QAAQC,MAAMC,IAAI,SAAAC,GAAI,OAC1BjC,OAAAqB,EAAA,EAAArB,CAACY,EAAD,CACEE,OAAQmB,EAAKC,KAAKC,oBAAoBC,YAAYtB,OAClDC,MAAOkB,EAAKC,KAAKC,oBAAoBC,YAAYrB,MACjDC,UAAWiB,EAAKC,KAAKlB,UACrBqB,aAAcJ,EAAKC,KAAKG,aACxBC,IAAQL,EAAKC,KAAKlB,UAAf,IAA4BiB,EAAKC,KAAKC,oBAAoBC,YAAYrB,OAExEf,OAAAuC,EAAA,EAAAvC,CAAUiC,EAAKC,KAAKC,oBAAoBK,cA9BnDX,KAAAY,cCNFC,EAAA,QAnBkB,kBAChB1C,OAAAqB,EAAA,EAAArB,CAAC2C,EAAA,EAAD,KACE3C,OAAAqB,EAAA,EAAArB,CAAC4C,EAAA,EAAD,KACE5C,OAAAqB,EAAA,EAAArB,CAAC6C,EAAA,EAAD,KACE7C,OAAAqB,EAAA,EAAArB,CAAA,mBACAA,OAAAqB,EAAA,EAAArB,CAAA,+TAKAA,OAAAqB,EAAA,EAAArB,CAAC8C,EAAA,EAAD,CAAQC,GAAG,YAAYC,IAAI,aAA3B,yBAEFhD,OAAAqB,EAAA,EAAArB,CAAC6C,EAAA,EAAD,KACE7C,OAAAqB,EAAA,EAAArB,CAACyB,EAAD,kHCfKwB,EAAY,IAAIC,EAAAC,EAAY,CACvCC,cAAeC,EAAA,cACfC,WAAY,CAAEC,OAAQC,EAAA,KACrBC","file":"component---src-pages-index-tsx-62f70460b9c1df46f9e6.js","sourcesContent":["import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { getEmSize } from '../styles/mixins'\nimport { colors } from '../styles/variables'\n\nconst StyledNewsEntry = styled.div`\n  padding: ${getEmSize(24)}em;\n  margin: ${getEmSize(32)}rem 0;\n  border-color: ${colors.gray.copy};\n  border-radius: ${getEmSize(12)}em;\n  background-color: ${colors.white};\n  box-shadow: 0 5px 15px 3px ${colors.gray.copy};\n  color: black;\n\n  p:last-child {\n    margin-bottom: 0;\n  }\n`\n\nconst StyledHeader = styled.div`\n  font-size: 2rem;\n  font-weight: bold;\n  color: ${colors.brand};\n`\n\nconst StyledSubHeader = styled.div`\n  font-size: 0.8rem;\n  color: ${colors.gray.dark};\n  margin-bottom: 1rem;\n`\n\ninterface NewsEntryProps {\n  author: string\n  title: string\n  birthTime: string\n  modifiedTime: string\n}\n\nconst NewsEntry: React.SFC<NewsEntryProps> = ({ author, title, birthTime, children }) => {\n  const timestamp = new Date(birthTime).toLocaleDateString()\n  return (\n    <StyledNewsEntry>\n      <StyledHeader>{title}</StyledHeader>\n      <StyledSubHeader>\n        {timestamp} - by {author}\n      </StyledSubHeader>\n      {children}\n    </StyledNewsEntry>\n  )\n}\n\nexport default NewsEntry\n","import * as React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from '@emotion/styled'\n\nimport { renderAst } from '../utils/rehype'\nimport NewsEntry from './NewsEntry'\n\nconst StyledNews = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  margin-top: 3rem;\n`\n\ntype StaticQueryProps = {\n  allFile: {\n    edges: {\n      node: {\n        childMarkdownRemark: {\n          htmlAst: string\n          frontmatter: {\n            author: string\n            title: string\n          }\n        }\n        birthTime: string\n        modifiedTime: string\n      }\n    }[]\n  }\n}\n\nconst News: React.SFC<{}> = () => (\n  <StaticQuery\n    query={graphql`\n      query IndexPageQuery {\n        allFile(filter: { sourceInstanceName: { eq: \"news\" } }, sort: { fields: [birthTime], order: DESC }) {\n          edges {\n            node {\n              childMarkdownRemark {\n                htmlAst\n                frontmatter {\n                  author\n                  title\n                }\n              }\n              birthTime\n              modifiedTime\n            }\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <StyledNews>\n        {data.allFile.edges.map(edge => (\n          <NewsEntry\n            author={edge.node.childMarkdownRemark.frontmatter.author}\n            title={edge.node.childMarkdownRemark.frontmatter.title}\n            birthTime={edge.node.birthTime}\n            modifiedTime={edge.node.modifiedTime}\n            key={`${edge.node.birthTime}.${edge.node.childMarkdownRemark.frontmatter.title}`}\n          >\n            {renderAst(edge.node.childMarkdownRemark.htmlAst)}\n          </NewsEntry>\n        ))}\n      </StyledNews>\n    )}\n  />\n)\n\nexport default News\n","import * as React from 'react'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport Button from '../components/Button'\nimport News from '../components/News'\nimport IndexLayout from '../layouts'\n\nconst IndexPage = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>Net64</h1>\n        <p>\n          Net64 is a modification for everyones favourite 3D Mario: Super Mario 64. Cooperate with your friends to collect all 120 stars and\n          show Bowser who's boss - or just beat each other up. The modification consists of a separate application that establishes a\n          connection between Super Mario 64 and the internet.\n        </p>\n        <Button to='/download' img='net64.svg'>Download Net64Plus Â»</Button>\n      </Container>\n      <Container>\n        <News />\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default IndexPage\n","import * as React from 'react'\n// @ts-ignore\nimport rehypeReact from 'rehype-react'\n\nimport Button from '../components/Button'\n\nexport const renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components: { button: Button }\n}).Compiler\n"],"sourceRoot":""}