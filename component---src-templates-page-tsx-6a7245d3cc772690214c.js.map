{"version":3,"sources":["webpack:///./src/templates/page.tsx","webpack:///./src/styles/variables.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/styles/mixins.ts","webpack:///./src/components/Container.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Page.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/styles/normalize.ts","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/Button.tsx"],"names":["renderAst","rehype_react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_1__","components","button","_components_Button__WEBPACK_IMPORTED_MODULE_5__","Compiler","__webpack_exports__","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_6__","_components_Page__WEBPACK_IMPORTED_MODULE_3__","_components_Container__WEBPACK_IMPORTED_MODULE_4__","markdownRemark","frontmatter","title","htmlAst","query","__webpack_require__","d","heights","colors","brand","lilac","accent","success","warning","ui","bright","light","whisper","code","gray","dark","copy","calm","white","black","fonts","sansSerif","serif","monospace","breakpoints","xs","sm","md","lg","xl","widths","dimensions","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","header","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_1___default","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_2___default","object","string","isRequired","func","getEmSize","size","_variables__WEBPACK_IMPORTED_MODULE_0__","StyledContainer","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","_styles_mixins__WEBPACK_IMPORTED_MODULE_4__","_styles_variables__WEBPACK_IMPORTED_MODULE_3__","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","m","module","exports","default","StyledPage","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","assign","json","shape","normalize","variables","mixins","StyledHeader","styled_base_browser_esm","polished_es","HeaderInner","Container","name","styles","HomepageLink","gatsby_browser_entry","components_Header","core_browser_esm","to","StyledLayoutRoot","components_LayoutRoot","react","StyledLayoutMain","components_LayoutMain","Helmet_default","site","siteMetadata","meta","content","description","_991718019","StyledButton","_styles_mixins__WEBPACK_IMPORTED_MODULE_3__","label","img","gatsby__WEBPACK_IMPORTED_MODULE_4__","src"],"mappings":"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","file":"component---src-templates-page-tsx-6a7245d3cc772690214c.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\n// @ts-ignore\nimport rehypeReact from 'rehype-react'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport Button from '../components/Button'\nimport IndexLayout from '../layouts'\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components: { button: Button }\n}).Compiler\n\ninterface PageTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        author: {\n          name: string\n          url: string\n        }\n      }\n    }\n    markdownRemark: {\n      htmlAst: string\n      excerpt: string\n      frontmatter: {\n        title: string\n      }\n    }\n  }\n}\n\nconst PageTemplate: React.SFC<PageTemplateProps> = ({ data }) => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>{data.markdownRemark.frontmatter.title}</h1>\n        <div>{renderAst(data.markdownRemark.htmlAst)}</div>\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default PageTemplate\n\nexport const query = graphql`\n  query PageTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          url\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      htmlAst\n      excerpt\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","/* tslint:disable:max-line-length */\n\nexport const colors = {\n  brand: '#663399',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc'\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)'\n  },\n  white: '#fff',\n  black: '#000'\n}\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace'\n}\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n}\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140\n}\n\nexport const dimensions = {\n  fontSize: {\n    regular: 18,\n    large: 22\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2\n  },\n  containerPadding: 1.5\n}\n\nexport const heights = {\n  header: 60\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import { dimensions } from './variables'\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { widths } from '../styles/variables'\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.SFC<ContainerProps> = ({ children, className }) => (\n  <StyledContainer className={className}>{children}</StyledContainer>\n)\n\nexport default Container\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { dimensions } from '../styles/variables'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.SFC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { dimensions, fonts, colors, breakpoints } from './variables'\nimport { getEmSize } from './mixins'\n\nexport default `\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    background-color: ${colors.white};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    margin-bottom: 1rem;\n    border: 1px solid ${colors.ui.light};\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n\n  td,\n  th {\n    padding: .25rem .5rem;\n    border: 1px solid ${colors.ui.light};\n  }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-of-type(odd) {\n        td {\n          background-color: ${colors.ui.whisper};\n        }\n        tr {\n          background-color: ${colors.ui.whisper};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${colors.ui.light};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${colors.ui.light};\n    color: ${colors.gray.calm};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { transparentize } from 'polished'\nimport { Link } from 'gatsby'\n\nimport { heights, dimensions, colors } from '../styles/variables'\nimport Container from './Container'\n\nconst StyledHeader = styled.header`\n  height: ${heights.header}px;\n  padding: 0 ${dimensions.containerPadding}rem;\n  background-color: ${colors.brand};\n  color: ${transparentize(0.5, colors.white)};\n`\n\nconst HeaderInner = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n`\n\nconst HomepageLink = styled(Link)`\n  color: ${colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Header: React.SFC<HeaderProps> = ({ title }) => (\n  <StyledHeader>\n    <HeaderInner>\n      <HomepageLink to=\"/\">{title}</HomepageLink>\n    </HeaderInner>\n  </StyledHeader>\n)\n\nexport default Header\n","import * as React from 'react'\nimport { Global, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport normalize from '../styles/normalize'\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  font-family: 'Press Start 2P', sans-serif;\n  font-family: 'Open Sans', sans-serif;\n`\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.SFC<LayoutRootProps> = ({ children, className }) => (\n  <>\n    <Global styles={() => css(normalize)} />\n    <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\ninterface LayoutMainProps {\n  className?: string\n}\n\nconst LayoutMain: React.SFC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n)\n\nexport default LayoutMain\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\nimport '../styles/normalize'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport LayoutMain from '../components/LayoutMain'\n\ntype StaticQueryProps = {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n    }\n  }\n}\n\nconst IndexLayout: React.SFC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: 'net64, super, mario, 64, online' }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <LayoutMain>{children}</LayoutMain>\n      </LayoutRoot>\n    )}\n  />\n)\n\nexport default IndexLayout\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { widths } from '../styles/variables'\nimport { getEmSize } from '../styles/mixins'\nimport { Link } from 'gatsby'\n\nconst StyledButton = styled.div`\n  display: inline-flex;\n  padding: ${getEmSize(6)}em;\n  cursor: pointer;\n  border: 1px solid black;\n  border-radius: ${getEmSize(6)}em;\n  background-color: yellow;\n  color: black;\n`\n\ninterface ButtonProps {\n  label: string\n  to: string\n  img?: string\n}\n\nconst Button: React.SFC<ButtonProps> = ({ label, to, img }) => (\n  <Link to={to}>\n    {img && <img src={img} />}\n    <StyledButton>{label}</StyledButton>\n  </Link>\n)\n\nexport default Button\n"],"sourceRoot":""}